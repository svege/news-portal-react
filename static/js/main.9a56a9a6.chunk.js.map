{"version":3,"sources":["api/constants.js","components/NewsItem/NewsItem.js","store/selectors.js","UI/Loader/Loader.js","helpers/errors.js","components/ErrorMessage/ErrorMessage.js","UI/Section/Section.js","containers/News/News.js","store/actions/news.js","store/actions/actionTypes.js","api/index.js","UI/Input/Input.js","helpers/inputs.js","containers/Login/Login.js","store/actions/auth.js","containers/Profile/Profile.js","store/actions/profile.js","components/NotFound/NotFound.js","components/PrivateRoute/PrivateRoute.js","UI/LoginButton/LoginButton.js","helpers/routes.js","containers/Header/Header.js","containers/Home/Home.js","App.js","store/reducers/news.js","store/reducers/auth.js","store/reducers/profile.js","store/reducers/index.js","store/configureStore.js","containers/ErrorBoundary/ErrorBoundary.js","index.js"],"names":["API","NewsItem","item","title","text","className","getNews","state","news","getNewsLoading","isLoading","getNewsErrorMessage","errorMessage","getIsAuthed","auth","isAuthed","getIsAuthLoading","getAuthErrorMessage","getProfile","profile","getProfileIsLoading","getProfileErrorMessage","getUserId","userId","Loader","max","wrong_email_or_password","user_not_found","other","ErrorMessage","errors","Section","children","type","defaultProps","News","renderContent","arr","length","map","key","id","fetchNews","this","props","Component","connect","dispatch","axios","method","url","then","data","status","payload","message","catch","err","Input","name","change","isRequired","value","placeholder","htmlFor","onChange","required","testData","Login","user","username","password","onInputChange","e","inputName","currentTarget","inputValue","setState","prevState","onSubmit","preventDefault","renderInputs","isEmpty","trim","to","inputs","disabled","nextProps","headers","email","res","Error","statusText","error","Profile","city","languages","social","label","href","link","fetchUserInfo","fetchUserInfoApi","NotFound","PrivateRoute","component","rest","render","LoginButton","logout","onClick","path","isExact","Header","isClosed","menuHandler","renderLinks","pathname","location","exact","role","aria-label","concat","aria-expanded","data-target","aria-hidden","routes","withRouter","Home","initialState","combineReducers","filteredItem","find","changedArr","filter","unshift","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","logger","ErrorBoundary","hasError","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.9a56a9a6.chunk.js","sourcesContent":["export const API = 'https://mysterious-reef-29460.herokuapp.com/api/v1';\nexport const NEWS_API = '/news';\nexport const AUTH_API = '/validate';\nexport const USER_API = '/user-info';\n","import React from 'react';\nimport { string, shape } from 'prop-types';\n\nconst NewsItem = ({ item }) => {\n    const { title, text } = item;\n    return (\n        <article className=\"media\">\n            <div className=\"content\">\n                <h3>{title}</h3>\n                <p>{text}</p>\n            </div>\n        </article>\n    );\n};\n\nNewsItem.propTypes = {\n    item: shape({\n        title: string.isRequired,\n        text: string.isRequired,\n    }).isRequired,\n};\n\nexport default NewsItem;\n","export const getNews = (state) => state.news.news;\nexport const getNewsLoading = (state) => state.news.isLoading;\nexport const getNewsErrorMessage = (state) => state.news.errorMessage;\n\nexport const getIsAuthed = (state) => state.auth.isAuthed;\nexport const getIsAuthLoading = (state) => state.auth.isLoading;\nexport const getAuthErrorMessage = (state) => state.auth.errorMessage;\n\nexport const getProfile = (state) => state.profile.profile;\nexport const getProfileIsLoading = (state) => state.profile.isLoading;\nexport const getProfileErrorMessage = (state) => state.profile.errorMessage;\n\nexport const getUserId = (state) => state.auth.userId;\n","import React from 'react';\n\nconst Loader = () => <progress className=\"progress is-primary\" max=\"100\" />;\n\nexport default Loader;\n","export default {\n    wrong_email_or_password: 'Неправильное имя пользователя или пароль',\n    user_not_found: 'Пользователь не найден',\n    other: 'Сервер недоступен',\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport errors from '../../helpers/errors';\n\nconst ErrorMessage = ({ errorMessage }) => {\n    return (\n        <p className=\"has-text-danger\">\n            {errors[errorMessage] || errors.other}\n        </p>\n    );\n};\n\nErrorMessage.propTypes = {\n    errorMessage: string.isRequired,\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\n\nconst Section = ({ children, type, text }) => {\n    return (\n        <section className=\"section\">\n            <div className=\"container\">\n                {type === 'textOnly' ? (\n                    <p className=\"title is-size-4 has-text-centered\">{text}</p>\n                ) : (\n                    children\n                )}\n            </div>\n        </section>\n    );\n};\n\nSection.propTypes = {\n    children: node,\n    type: string,\n    text: string,\n};\n\nSection.defaultProps = {\n    children: '',\n    type: '',\n    text: '',\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { arrayOf, bool, shape, string, func } from 'prop-types';\nimport { fetchNews } from '../../store/actions';\nimport NewsItem from '../../components/NewsItem/NewsItem';\nimport {\n    getNews,\n    getNewsLoading,\n    getNewsErrorMessage,\n} from '../../store/selectors';\nimport Loader from '../../UI/Loader/Loader';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport Section from '../../UI/Section/Section';\n\nclass News extends Component {\n    componentDidMount() {\n        // eslint-disable-next-line no-shadow\n        const { fetchNews } = this.props;\n        fetchNews();\n    }\n\n    renderContent = (arr) => {\n        if (arr.length === 0) {\n            return <p className=\"title\">Новостей нет</p>;\n        }\n\n        return (\n            <>\n                <h2 className=\"title\">Новости</h2>\n                {arr.map((item) => {\n                    return <NewsItem key={item.id} item={item} />;\n                })}\n                <p className=\"mt-3 is-size-5\">Всего новостей: {arr.length}</p>\n            </>\n        );\n    };\n\n    render() {\n        const { isLoading, news, errorMessage } = this.props;\n        return (\n            <Section>\n                {news && this.renderContent(news)}\n                {isLoading && <Loader />}\n                {errorMessage && <ErrorMessage errorMessage={errorMessage} />}\n            </Section>\n        );\n    }\n}\n\nNews.propTypes = {\n    isLoading: bool.isRequired,\n    errorMessage: string.isRequired,\n    fetchNews: func.isRequired,\n    news: arrayOf(\n        shape({\n            key: string,\n        })\n    ),\n};\n\nNews.defaultProps = {\n    news: [],\n};\n\nfunction mapStateToProps(state) {\n    return {\n        news: getNews(state),\n        isLoading: getNewsLoading(state),\n        errorMessage: getNewsErrorMessage(state),\n    };\n}\n\nexport default connect(mapStateToProps, { fetchNews })(News);\n","import {\n    FETCH_NEWS_START,\n    FETCH_NEWS_SUCCESS,\n    FETCH_NEWS_FAILURE,\n} from './actionTypes';\nimport { fetchNewsApi } from '../../api';\n\nexport const fetchNews = () => (dispatch) => {\n    dispatch({ type: FETCH_NEWS_START });\n    fetchNewsApi()\n        .then(({ data }) => {\n            if (data.status === 'err') {\n                dispatch({\n                    type: FETCH_NEWS_FAILURE,\n                    payload: data.message,\n                });\n                return;\n            }\n            dispatch({\n                type: FETCH_NEWS_SUCCESS,\n                payload: data.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: FETCH_NEWS_FAILURE,\n                payload: err.message,\n            });\n        });\n};\n","export const FETCH_NEWS_START = 'FETCH_NEWS_START';\nexport const FETCH_NEWS_SUCCESS = 'FETCH_NEWS_SUCCESS';\nexport const FETCH_NEWS_FAILURE = 'FETCH_NEWS_FAILURE';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\n\nexport const FETCH_USER_INFO_START = 'FETCH_USER_INFO_START';\nexport const FETCH_USER_INFO_SUCCESS = 'FETCH_USER_INFO_SUCCESS';\nexport const FETCH_USER_INFO_FAILURE = 'FETCH_USER_INFO_FAILURE';\n\nexport const LOGOUT = 'LOGOUT';\n","import axios from 'axios';\nimport { API, NEWS_API, AUTH_API, USER_API } from './constants';\n\nexport const fetchNewsApi = () => {\n    return axios({\n        method: 'get',\n        url: API + NEWS_API,\n    });\n};\n\nexport const authApi = (data) => {\n    return axios({\n        method: 'post',\n        url: API + AUTH_API,\n        headers: { 'content-type': 'application/json' },\n        data: {\n            email: data.username,\n            password: data.password,\n        },\n    });\n};\n\nexport const fetchUserInfoApi = (id) => {\n    return axios({\n        method: 'get',\n        url: `${API + USER_API}/${id}`,\n    });\n};\n","import React from 'react';\nimport { string, bool, func } from 'prop-types';\n\nconst Input = ({\n    name,\n    type,\n    change,\n    isRequired,\n    value,\n    text,\n    placeholder,\n}) => {\n    return (\n        <div className=\"field\">\n            <label htmlFor={name} className=\"label\">\n                {text}\n                <span className=\"is-size-7 is-block\">\n                    (тестовые данные: {placeholder})\n                </span>\n            </label>\n            <div className=\"control\">\n                <input\n                    type={type}\n                    id={name}\n                    value={value}\n                    name={name}\n                    onChange={change}\n                    required={isRequired}\n                    placeholder={`${text}…`}\n                    className=\"input is-primary\"\n                />\n            </div>\n        </div>\n    );\n};\n\nInput.propTypes = {\n    name: string.isRequired,\n    value: string.isRequired,\n    type: string.isRequired,\n    isRequired: bool.isRequired,\n    change: func.isRequired,\n    text: string.isRequired,\n    placeholder: string.isRequired,\n};\n\nexport default Input;\n","export default [\n    {\n        type: 'email',\n        name: 'username',\n        isRequired: true,\n        text: 'Имя пользователя',\n        testData: 'max@test.com',\n    },\n    {\n        type: 'password',\n        name: 'password',\n        isRequired: true,\n        text: 'Пароль',\n        testData: '12345',\n    },\n];\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { string, bool, func } from 'prop-types';\nimport { auth } from '../../store/actions';\nimport {\n    getIsAuthed,\n    getIsAuthLoading,\n    getAuthErrorMessage,\n} from '../../store/selectors';\nimport Input from '../../UI/Input/Input';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport Section from '../../UI/Section/Section';\nimport inputs from '../../helpers/inputs';\n\nclass Login extends Component {\n    state = {\n        user: {\n            username: '',\n            password: '',\n        },\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { errorMessage } = nextProps;\n\n        if (errorMessage === 'wrong_email_or_password') {\n            return {\n                user: {\n                    ...prevState.user,\n                    password: '',\n                },\n            };\n        }\n        return null;\n    }\n\n    onInputChange = (e) => {\n        const inputName = e.currentTarget.name;\n        const inputValue = e.currentTarget.value;\n        this.setState((prevState) => ({\n            user: {\n                ...prevState.user,\n                [inputName]: inputValue,\n            },\n        }));\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const { user } = this.state;\n        // eslint-disable-next-line no-shadow\n        const { auth } = this.props;\n        auth(user);\n    };\n\n    renderInputs = (arr) => {\n        const { user } = this.state;\n        return arr.map((item) => (\n            <Input\n                key={item.name}\n                name={item.name}\n                value={user[item.name]}\n                type={item.type}\n                change={this.onInputChange}\n                isRequired={item.isRequired}\n                text={item.text}\n                placeholder={item.testData}\n            />\n        ));\n    };\n\n    render() {\n        const { isAuthed, isLoading, errorMessage } = this.props;\n        const { user } = this.state;\n        const { username, password } = user;\n\n        const isEmpty =\n            username.trim().length === 0 || password.trim().length === 0;\n\n        return (\n            <Section>\n                <div className=\"columns is-centered\">\n                    <div className=\"column is-half\">\n                        <h2 className=\"title\">Вход в аккаунт</h2>\n                        {errorMessage && (\n                            <ErrorMessage errorMessage={errorMessage} />\n                        )}\n                        {isAuthed ? (\n                            <Redirect to=\"/profile\" />\n                        ) : (\n                            <form onSubmit={this.onSubmit}>\n                                {this.renderInputs(inputs)}\n                                <button\n                                    className=\"button is-primary\"\n                                    type=\"submit\"\n                                    disabled={isLoading || isEmpty}\n                                >\n                                    {isLoading ? 'Проверка…' : 'Войти'}\n                                </button>\n                            </form>\n                        )}\n                    </div>\n                </div>\n            </Section>\n        );\n    }\n}\n\nLogin.propTypes = {\n    isAuthed: bool.isRequired,\n    isLoading: bool,\n    errorMessage: string.isRequired,\n    auth: func.isRequired,\n};\n\nLogin.defaultProps = {\n    isLoading: false,\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthed: getIsAuthed(state),\n        isLoading: getIsAuthLoading(state),\n        errorMessage: getAuthErrorMessage(state),\n    };\n};\n\nexport default connect(mapStateToProps, { auth })(Login);\n","import { AUTH_START, AUTH_SUCCESS, AUTH_FAILURE, LOGOUT } from './actionTypes';\nimport { authApi } from '../../api';\n\nexport const auth = (user) => (dispatch) => {\n    dispatch({ type: AUTH_START });\n    authApi(user)\n        .then((res) => {\n            if (res.status !== 200) {\n                throw Error(res.statusText);\n            }\n            return res;\n        })\n        .then(({ data }) => {\n            if (data.status === 'err') {\n                dispatch({\n                    type: AUTH_FAILURE,\n                    payload: data.message,\n                    error: true,\n                });\n                return;\n            }\n            dispatch({\n                type: AUTH_SUCCESS,\n                payload: data.data,\n            });\n        })\n        .catch((err) =>\n            dispatch({\n                type: AUTH_FAILURE,\n                payload: err.message,\n                error: true,\n            })\n        );\n};\n\nexport const logout = () => (dispatch) => {\n    dispatch({\n        type: LOGOUT,\n    });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bool, number, string, shape, arrayOf, func } from 'prop-types';\nimport { fetchUserInfo } from '../../store/actions';\nimport {\n    getProfile,\n    getProfileErrorMessage,\n    getProfileIsLoading,\n    getUserId,\n} from '../../store/selectors';\nimport Loader from '../../UI/Loader/Loader';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport Section from '../../UI/Section/Section';\n\nclass Profile extends Component {\n    componentDidMount() {\n        // eslint-disable-next-line no-shadow\n        const { id, fetchUserInfo } = this.props;\n        fetchUserInfo(id);\n    }\n\n    renderContent = (user) => {\n        return (\n            <>\n                <h2 className=\"title\">Профиль пользователя</h2>\n                <p className=\"is-size-5 mb-3\">Город: {user.city}</p>\n                <div className=\"mb-3\">\n                    <h3 className=\"is-size-5 has-text-weight-semibold\">\n                        Знание языков\n                    </h3>\n                    <ul>\n                        {user.languages.map((item) => (\n                            <li key={item}>{item}</li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"mb-3\">\n                    <h3 className=\"is-size-5 has-text-weight-semibold\">\n                        Контакты\n                    </h3>\n                    <ul>\n                        {user.social.map((item) => (\n                            <li key={item.label}>\n                                <a\n                                    href={item.link}\n                                    className=\"has-text-primary is-capitalized\"\n                                >\n                                    {item.label}\n                                </a>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </>\n        );\n    };\n\n    render() {\n        const { profile, isLoading, errorMessage } = this.props;\n\n        return (\n            <Section>\n                {profile && this.renderContent(profile)}\n\n                {isLoading && <Loader />}\n\n                {errorMessage && <ErrorMessage errorMessage={errorMessage} />}\n            </Section>\n        );\n    }\n}\n\nProfile.propTypes = {\n    id: number.isRequired,\n    isLoading: bool.isRequired,\n    errorMessage: string.isRequired,\n    profile: shape({\n        city: string.isRequired,\n        languages: arrayOf(string.isRequired).isRequired,\n        social: arrayOf(\n            shape({\n                label: string.isRequired,\n                link: string.isRequired,\n            })\n        ).isRequired,\n    }),\n    fetchUserInfo: func.isRequired,\n};\n\nProfile.defaultProps = {\n    profile: null,\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: getProfile(state),\n        isLoading: getProfileIsLoading(state),\n        id: getUserId(state),\n        errorMessage: getProfileErrorMessage(state),\n    };\n};\n\nexport default connect(mapStateToProps, { fetchUserInfo })(Profile);\n","import {\n    FETCH_USER_INFO_START,\n    FETCH_USER_INFO_SUCCESS,\n    FETCH_USER_INFO_FAILURE,\n} from './actionTypes';\nimport { fetchUserInfoApi } from '../../api';\n\nexport const fetchUserInfo = (id) => (dispatch) => {\n    dispatch({ type: FETCH_USER_INFO_START });\n    fetchUserInfoApi(id)\n        .then(({ data }) => {\n            if (data.status === 'err') {\n                dispatch({\n                    type: FETCH_USER_INFO_FAILURE,\n                    payload: data.message,\n                });\n\n                return;\n            }\n            dispatch({\n                type: FETCH_USER_INFO_SUCCESS,\n                payload: data.data,\n            });\n        })\n        .catch((err) =>\n            dispatch({\n                type: FETCH_USER_INFO_FAILURE,\n                error: err.message,\n            })\n        );\n};\n","import React from 'react';\nimport Section from '../../UI/Section/Section';\n\nconst NotFound = () => {\n    return <Section type=\"textOnly\" text=\"Страница не найдена\" />;\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { bool, func } from 'prop-types';\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n        {...rest}\n        render={(props) =>\n            auth ? <Component {...props} /> : <Redirect to=\"/login\" />\n        }\n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: bool.isRequired,\n    component: func.isRequired,\n};\nexport default PrivateRoute;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { bool, func } from 'prop-types';\n\nconst LoginButton = ({ isAuthed, logout }) => (\n    <>\n        {isAuthed ? (\n            <button\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={logout}\n            >\n                Выйти\n            </button>\n        ) : (\n            <Link className=\"button is-primary\" to=\"/login\">\n                Войти\n            </Link>\n        )}\n    </>\n);\n\nLoginButton.propTypes = {\n    isAuthed: bool.isRequired,\n    logout: func.isRequired,\n};\n\nexport default LoginButton;\n","export default [\n    { id: 'home', name: 'Главная', path: '/', isExact: true, isAuthed: false },\n    {\n        id: 'news',\n        name: 'Новости',\n        path: '/news',\n        isExact: false,\n        isAuthed: false,\n    },\n    {\n        id: 'profile',\n        name: 'Профиль',\n        path: '/profile',\n        isExact: false,\n        isAuthed: true,\n    },\n];\n","import React, { Component } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bool, func, shape, string } from 'prop-types';\nimport { logout } from '../../store/actions';\nimport LoginButton from '../../UI/LoginButton/LoginButton';\nimport { getIsAuthed } from '../../store/selectors';\nimport routes from '../../helpers/routes';\n\nclass Header extends Component {\n    state = {\n        isClosed: true,\n    };\n\n    menuHandler = () => {\n        const { isClosed } = this.state;\n        this.setState({ isClosed: !isClosed });\n    };\n\n    renderLinks = (arr) => {\n        const { isAuthed, location } = this.props;\n        const { pathname } = location;\n        return arr.map((item) => {\n            if (item.path === pathname) {\n                return (\n                    <p key={item.id} className=\"navbar-item\">\n                        {item.name}\n                    </p>\n                );\n            }\n            if (!isAuthed && item.isAuthed) {\n                return '';\n            }\n\n            return (\n                <NavLink\n                    key={item.id}\n                    className=\"navbar-item\"\n                    exact={item.isExact}\n                    to={item.path}\n                >\n                    {item.name}\n                </NavLink>\n            );\n        });\n    };\n\n    render() {\n        // eslint-disable-next-line no-shadow\n        const { isAuthed, logout } = this.props;\n        const { isClosed } = this.state;\n\n        return (\n            <header className=\"has-background-light\">\n                <div className=\"container\">\n                    <nav\n                        className=\"navbar has-background-light\"\n                        role=\"navigation\"\n                        aria-label=\"main navigation\"\n                    >\n                        <div className=\"navbar-brand\">\n                            <h2 className=\"navbar-item is-size-4 is-uppercase has-text-weight-semibold\">\n                                Новости\n                            </h2>\n                            <button\n                                type=\"button\"\n                                className={'navbar-burger button is-text is-radiusless'.concat(\n                                    isClosed ? '' : ' is-active'\n                                )}\n                                aria-label=\"menu\"\n                                aria-expanded=\"false\"\n                                data-target=\"navbarMenu\"\n                                onClick={this.menuHandler}\n                            >\n                                <span aria-hidden=\"true\" />\n                                <span aria-hidden=\"true\" />\n                                <span aria-hidden=\"true\" />\n                            </button>\n                        </div>\n                        <div\n                            className={'navbar-menu'.concat(\n                                isClosed ? '' : ' is-active'\n                            )}\n                            id=\"navbarMenu\"\n                        >\n                            <div className=\"navbar-start\">\n                                {this.renderLinks(routes)}\n                            </div>\n                            <div className=\"navbar-end\">\n                                <div className=\"navbar-item\">\n                                    <LoginButton\n                                        isAuthed={isAuthed}\n                                        logout={logout}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </nav>\n                </div>\n            </header>\n        );\n    }\n}\n\nHeader.propTypes = {\n    isAuthed: bool.isRequired,\n    logout: func.isRequired,\n    location: shape({\n        pathname: string,\n    }),\n};\n\nHeader.defaultProps = {\n    location: {\n        pathname: '',\n    },\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthed: getIsAuthed(state),\n    };\n};\n\nexport default connect(mapStateToProps, { logout })(withRouter(Header));\n","import React from 'react';\nimport Section from '../../UI/Section/Section';\n\nconst Home = () => {\n    return <Section type=\"textOnly\" text=\"Это приложение сделано на React\" />;\n};\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bool } from 'prop-types';\nimport News from './containers/News/News';\nimport Login from './containers/Login/Login';\nimport Profile from './containers/Profile/Profile';\nimport NotFound from './components/NotFound/NotFound';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport Header from './containers/Header/Header';\nimport Home from './containers/Home/Home';\nimport { getIsAuthed } from './store/selectors';\n\nfunction App({ isAuthed }) {\n    return (\n        <>\n            <Header />\n            <Switch>\n                <PrivateRoute\n                    auth={isAuthed}\n                    path=\"/profile\"\n                    component={() => <Profile />}\n                />\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/news\" component={News} />\n                <Route path=\"/login\" component={Login} />\n                <Route component={NotFound} />\n            </Switch>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthed: getIsAuthed(state),\n    };\n};\n\nApp.propTypes = {\n    isAuthed: bool.isRequired,\n};\n\nexport default connect(mapStateToProps)(App);\n","import {\n    FETCH_NEWS_FAILURE,\n    FETCH_NEWS_START,\n    FETCH_NEWS_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n    news: null,\n    isLoading: false,\n    errorMessage: '',\n};\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case FETCH_NEWS_START:\n            return { ...state, isLoading: true, errorMessage: '' };\n        case FETCH_NEWS_SUCCESS:\n            return {\n                ...state,\n                news: payload,\n                isLoading: false,\n                errorMessage: '',\n            };\n        case FETCH_NEWS_FAILURE:\n            return {\n                ...state,\n                news: null,\n                isLoading: false,\n                errorMessage: payload,\n            };\n        default:\n            return state;\n    }\n};\n","import {\n    AUTH_FAILURE,\n    AUTH_START,\n    AUTH_SUCCESS,\n    LOGOUT,\n} from '../actions/actionTypes';\n\nconst initialState = {\n    userId: null,\n    isLoading: false,\n    isAuthed: false,\n    errorMessage: '',\n};\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case AUTH_START:\n            return {\n                ...state,\n                isLoading: true,\n                errorMessage: '',\n            };\n        case AUTH_SUCCESS:\n            return {\n                userId: payload.id,\n                isLoading: false,\n                isAuthed: true,\n                errorMessage: '',\n            };\n        case AUTH_FAILURE:\n            return {\n                userId: null,\n                isLoading: false,\n                isAuthed: false,\n                errorMessage: payload,\n            };\n        case LOGOUT:\n            return {\n                userId: null,\n                isAuthed: false,\n                errorMessage: '',\n            };\n        default:\n            return state;\n    }\n};\n","import {\n    FETCH_USER_INFO_FAILURE,\n    FETCH_USER_INFO_START,\n    FETCH_USER_INFO_SUCCESS,\n    LOGOUT,\n} from '../actions/actionTypes';\n\nconst initialState = {\n    profile: null,\n    isLoading: false,\n    errorMessage: '',\n};\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case FETCH_USER_INFO_START:\n            return { ...state, isLoading: true, errorMessage: '' };\n        case FETCH_USER_INFO_SUCCESS: {\n            const filteredItem = payload.social.find(\n                (item) => item.label === 'web'\n            );\n            let changedArr = [...payload.social];\n\n            if (filteredItem.label !== payload.social[0].label) {\n                changedArr = [\n                    ...payload.social.filter((item) => {\n                        return item.label !== 'web';\n                    }),\n                ];\n                changedArr.unshift(filteredItem);\n            }\n\n            return {\n                ...state,\n                profile: { ...payload, social: changedArr },\n                isLoading: false,\n                errorMessage: '',\n            };\n        }\n        case FETCH_USER_INFO_FAILURE:\n            return {\n                ...state,\n                profile: null,\n                isLoading: false,\n                errorMessage: payload,\n            };\n        case LOGOUT:\n            return {\n                ...state,\n                profile: null,\n                isLoading: false,\n                errorMessage: '',\n            };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport news from './news';\nimport auth from './auth';\nimport profile from './profile';\n\nexport default combineReducers({\n    auth,\n    news,\n    profile,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers';\n\nexport default createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk, logger))\n);\n","import React, { Component } from 'react';\nimport { node } from 'prop-types';\nimport Section from '../../UI/Section/Section';\n\nclass ErrorBoundary extends Component {\n    state = { hasError: false };\n\n    // eslint-disable-next-line no-unused-vars\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    render() {\n        const { hasError } = this.state;\n        const { children } = this.props;\n\n        if (hasError) {\n            return <Section type=\"textOnly\" text=\"Что-то пошло не так.\" />;\n        }\n\n        return children;\n    }\n}\n\nErrorBoundary.propTypes = {\n    children: node.isRequired,\n};\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './store/configureStore';\nimport ErrorBoundary from './containers/ErrorBoundary/ErrorBoundary';\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundary>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </ErrorBoundary>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}